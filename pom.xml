<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.chbuck.demo</groupId>
    <artifactId>spring-boot-thymeleaf</artifactId>
    <version>1.0</version>
    <name>spring-boot-thymeleaf</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.1.RELEASE</version>
        <relativePath />
    </parent>

    <!-- Spring IO Platform for dependency management -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.spring.platform</groupId>
                <artifactId>platform-bom</artifactId>
                <version>2.0.1.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Add typical dependencies for a web application -->
    <dependencies>
        <!-- Core -->
        <!-- Spring Boot
           spring web boot starter comes with
           * spring-boot-starter
             * spring-boot-starter-logging
               * jcl-over-slf4j            drop-in replacement for jcl (remove commons-logging.jar)
               * log4j-over-slf4j          drop-in replacement for log4j which uses slf4j (remove log4j.jar)
               * jul-to-slf4j              routes incoming java.util.logging records to slf4j
               * logback-classic           implementation of the slf4j API
             * spring-core
             * spring-boot
             * spring-boot-autoconfigure
           * spring-booter-starter-tomcat  embedded tomcat
           * spring-core
           * spring-web
           * spring-webmvc
           * jackson-databind
           * hibernate-validator -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>


        <!-- Thymeleaf
           spring thymeleaf boot starter comes with
           * spring-boot-starter
             * spring-boot-starter-logging
               * jcl-over-slf4j
               * jul-to-slf4j
               * log4j-over-slf4j
               * logback-classic
             * spring-core
             * spring-boot
             * spring-boot-autoconfigure
           * spring-boot-starter-web
             * (siehe oben)
           * spring-core
           * thymeleaf-spring4
           * thymeleaf-layout-dialect
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!-- Thymeleaf Extras to use #temporals object in templates -->
        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-java8time</artifactId>
            <version>2.1.0.RELEASE</version>
        </dependency>

        <!--dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity3</artifactId>
            <version>2.1.2.RELEASE</version>
        </dependency-->


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- add endpoints for monitoring (/health, /autoconfig, /beans, /configprops, /dump, /env, /info, /metrics, /mappings, /shutdown, /trace)
           spring metrics and monitoring boot starter comes with
           * spring-boot-starter
             * spring-boot-starter-logging
               * jcl-over-slf4j
               * jul-to-slf4j
               * log4j-over-slf4j
               * logback-classic
             * spring-core
             * spring-boot
             * spring-boot-autoconfigure
           * spring-boot-actuator
             * spring-boot
             * spring-boot-autoconfigure
             * spring-core
             * spring-context
             * jackson-databind
           * spring-core
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- WebJars -->
        <!-- bootstrap (/webjars/bootstrap/3.2.0/css/bootstrap.min.css) -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>3.2.0</version>
        </dependency>
        <!-- bootstrap (/webjars/bootstrap/3.2.0/css/bootstrap.min.css) -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>2.1.1</version>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>2.48.2</version>
            <scope>test</scope>
        </dependency>
        <!-- Provided (for embedded war support) -->
        <!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        -->
    </dependencies>

    <!-- Package as an executable jar -->
    <build>
        <resources>
            <resource>
                <!-- enable referring pom.xml properties via placeholders in application.properties file -->
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!--  plugin to generate a git.properties file which is used by spring actuator endpoint /info -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>

            <!--  create -boot.jar with embedded tomcat -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
